import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.1'
    }
}

apply plugin: 'com.android.model.application'

model {

    compileOptions.with {
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    }

    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.3"

        defaultConfig.with {
            applicationId = "com.labs.okey.oneride"
            minSdkVersion.apiLevel = 16
            targetSdkVersion.apiLevel = 23
            versionCode = 4
            versionName = "4.71"
            multiDexEnabled = true
        }

    }

    android.ndk {
        moduleName = "fastcvUtils"

        abiFilters.addAll("armeabi", "armeabi-v7a")

        // Link with static OpenCV libraries: the order is important!
        // The following order taken from OpenCV.mk
        def opencv_modules = ["shape", "stitching", "objdetect", "superres", "videostab", "calib3d", "features2d", "highgui", "videoio", "imgcodecs", "video", "photo", "ml", "imgproc", "flann", "core", "hal", "tbb"]

        ldLibs.addAll(["log", "stdc++", "dl", "z", "jnigraphics"])

        abiFilters.each { targetAbi ->
            println targetAbi

            opencv_modules.each { module ->

                if (module.equals("tbb")) {
                    ldLibs.add(file(projectDir).absolutePath + "/src/main/jniLibs/" + targetAbi + "/lib" + module + ".a")
                } else {
                    ldLibs.add(file(projectDir).absolutePath + "/src/main/jniLibs/" + targetAbi + "/libopencv_" + module + ".a")
                }
            }
        }

        cppFlags.addAll(["-std=c++11", "-Werror", "--debug", "-frtti", "-fexceptions", "-D_DEBUG"]);

        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            def opencvhome = System.getenv("OPENCV_HOME")
            cppFlags.add("-I" + opencvhome + "\\native\\jni\\include")
        } else {
            cppFlags.add("-I/Users/Oleg/Downloads/OpenCV-android-sdk/sdk/native/jni/include")
        }


        stl = "gnustl_shared" //  GNU Standard C++ Library runtime
        debuggable = true
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.pro'))
        }
    }

//    android.sources {
//        main {
//            java {
//                source {
//                    srcDir "src"
//                }
//            }
//        }
//    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "http://dl.bintray.com/glomadrian/maven" }
    flatDir {
        dirs 'aars'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile project(':openCVLibrary310')
    //compile project(':livesdk')

    // See here: https://developers.google.com/android/guides/setup
    // for detailed discussion about setting up GMS
    compile('com.afollestad.material-dialogs:core:0.8.5.6@aar') {
        transitive = true
    }
    // Twitter
    compile('com.twitter.sdk.android:twitter:1.12.0@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true
    }
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.2@aar') {
        transitive = true;
    }

    compile 'com.google.android.gms:play-services-gcm:8.1.0'
    compile 'com.google.android.gms:play-services-maps:8.1.0'
    compile 'com.google.android.gms:play-services-location:8.1.0'
    compile 'com.google.android.gms:play-services-plus:8.1.0'
    // You may use play-services 8.4.0 after
    // upgrading azure server side to App Service instead of WAMS
//    compile 'com.google.android.gms:play-services-location:8.4.0'
//    compile 'com.google.android.gms:play-services-gcm:8.4.0'
//    compile 'com.google.android.gms:play-services-auth:8.4.0'
    //compile 'com.google.android.gms:play-services-analytics:8.4.0'

    compile 'com.android.support:support-annotations:23.2.1'
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:cardview-v7:23.2.1'
    compile 'com.android.support:recyclerview-v7:23.2.1'
    compile 'com.android.support:multidex:1.0.1'

    compile 'com.android.volley:volley:1.0.0'
    compile 'io.fabric.sdk.android:fabric:1.3.10'

    compile 'com.facebook.android:facebook-android-sdk:4.10.1'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.google.guava:guava:19.0'

    compile 'com.microsoft.azure:azure-mobile-android:3.1.0'
    //compile 'com.microsoft.azure:azure-notifications-handler:1.0.1@jar'
    compile(group: 'com.microsoft.azure', name: 'azure-notifications-handler', version: '1.0.1', ext: 'jar')
    compile 'com.microsoft.azure.android:azure-storage-android:0.7.0@aar'

    compile 'com.microsoft.projectoxford:face:1.0.0'

    compile 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'

    compile 'net.steamcrafted:load-toast:1.0.10'
    compile 'com.github.brnunes:swipeablerecyclerview:1.0.1'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.1.+'
    compile 'com.pkmmte.view:circularimageview:1.1'
    compile 'com.sothree.slidinguppanel:library:3.3.0'
}
